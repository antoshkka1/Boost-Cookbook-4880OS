# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2016-2017.

#
# See https://svn.boost.org/trac/boost/wiki/TravisCoverals for description of this file
# and how it can be used with Boost libraries.
#
# File revision #3 + modifications

init:
    - set BRANCH_TO_TEST=%APPVEYOR_REPO_BRANCH%  # Change to branch you wish to test. Use %APPVEYOR_REPO_BRANCH% for current branch.

###############################################################################################################
# From this point and below code is same for all the Boost libs
###############################################################################################################

version: 1.64.{build}-{branch}
 
# branches to build
branches:
  except:
    - gh-pages

skip_tags: true

before_build:
    - set PATH=%PATH%;C:\\MinGW\\bin;C:\Qt\5.8\msvc2015_64\\bin
    - echo "Testing %APPVEYOR_PROJECT_NAME%"
    # Cloning Boost libraries (fast nondeep cloning)
    - set BOOST=C:/boost-local


    - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
    - qmake "QMAKE_CXX=msvc" "BOOST_PATH=%BOOST%" BoostBook.pro
    - nmake
    - python ./test.py

    - qmake "QMAKE_CXX=gcc" "QMAKE_LINK=g++" "BOOST_PATH=%BOOST%" BoostBook.pro
    - nmake
    - python ./test.py


    - git init %BOOST%
    - cd %BOOST%
    - git remote add --no-tags -t %BRANCH_TO_TEST% origin https://github.com/boostorg/boost.git
    - git fetch --depth=1
    - git checkout %BRANCH_TO_TEST%
    - git submodule update --init --merge
    - git remote set-branches --add origin %BRANCH_TO_TEST%
    - git pull --recurse-submodules

build_script:
    - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
    - bootstrap.bat
    - b2.exe headers
    - b2.exe -j4 toolset=gcc,msvc address-model=64 architecture=x86 link=shared --with-program_options --with-filesystem --with-system --with-test --with-thread --with-chrono --with-regex --with-random --with-context --with-coroutine stage
    - cd %TRAVIS_BUILD_DIR%

after_build:
before_test:
test_script:
    - qmake "QMAKE_CXX=gcc" "QMAKE_LINK=g++" "BOOST_PATH=%BOOST%" BoostBook.pro
    - make -j4
    - python ./test.py

    - qmake "QMAKE_CXX=msvc" "BOOST_PATH=%BOOST%" BoostBook.pro
    - make -j4
    - python ./test.py

after_test:
on_success:
on_failure:
on_finish:
